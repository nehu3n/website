---
export interface Props {
  title: string;
  description: string;
  pubDate: Date;
  slug: string;
  heroImage?: string;
  tags?: string[];
}

const { title, description, pubDate, slug, heroImage, tags = [] } = Astro.props;
---

<article class="bg-dark-200 rounded-lg border border-dark-100 hover:border-dark-50 transition-all duration-300 hover:bg-dark-100 group overflow-hidden">
  {heroImage && (
    <div class="aspect-video overflow-hidden">
      <img 
        src={heroImage} 
        alt={title}
        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
      />
    </div>
  )}
  
  <div class="p-6">
    <div class="flex items-center justify-between mb-3">
      <time datetime={pubDate.toISOString()} class="text-gray-500 font-mono text-xs">
        {pubDate.toLocaleDateString('en-us', {
          year: 'numeric',
          month: 'short',
          day: 'numeric',
        })}
      </time>
      
      {tags.length > 0 && (
        <div class="flex gap-2">
          {tags.slice(0, 2).map((tag) => (
            <span class="px-2 py-1 bg-dark-300 text-gray-400 font-mono text-xs rounded border border-dark-200">
              {tag}
            </span>
          ))}
        </div>
      )}
    </div>
    
    <h3 class="text-xl font-medium text-white group-hover:text-gray-100 mb-3 font-mono">
      <a href={`/blog/${slug}`} class="hover:underline">
        {title}
      </a>
    </h3>
    
    <p class="text-gray-400 text-sm leading-relaxed line-clamp-3">
      {description}
    </p>
    
    <div class="mt-4">
      <a 
        href={`/blog/${slug}`}
        class="text-gray-500 hover:text-gray-300 font-mono text-xs transition-colors duration-200 inline-flex items-center gap-1"
      >
        read more
        <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </a>
    </div>
  </div>
</article>